name: Upload

on:
  push
  # - tags:
  #   - "*"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
        poetry-version: ["1.1.11"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run py.test . --cov
      - name: Upload coverage
        run: poetry run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # upload-pypi:
  #   needs: test
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.8"
  #     - name: Run image
  #       uses: abatilo/actions-poetry@v2.0.0
  #       with:
  #         poetry-version: "1.1.11"
  #     - name: Upload to PyPI
  #       run: poetry publish --build --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}

  upload-conda:
    needs: test
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: Setup Anaconda Client
        run: conda install --yes anaconda-client conda-build poetry
      - name: Set latest version
        run: echo "version=${{ steps.previoustag.outputs.tag }}" >> $GITHUB_ENV
      - name: Conda build
        env:
          PYTHON_VERSIONS: "[3.8]"
          LATEST_VERSION: ${{ env.version }}
        run: bash conda-build.sh
      - name: Upload to Anaconda
        run: anaconda -t  ${{ secrets.ANACONDA_TOKEN }} upload --skip-existing conda-bld/**/carto2gpd-*.tar.bz2
