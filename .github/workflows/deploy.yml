name: Deploy

on:
  push:
    tags:
      - "*"
    paths:
      - .github/workflows/deploy.yml

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        poetry-version: ["1.1.11"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run py.test . --cov carto2gpd
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: poetry run coveralls

  upload-pypi:
    needs: test
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.11"
      - name: Upload to PyPI
        run: poetry publish --build --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}

  upload-conda:
    needs: test
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
      - name: Setup Anaconda Client
        run: conda install --yes anaconda-client
      - name: Upload to Anaconda
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          PYTHON_VERSIONS: "[3.8, 3.9, 3.10]"
        run: bash deploy_anaconda.sh
